/* eslint-disable @typescript-eslint/no-explicit-any */
import type { Metadata } from "next";
import localFont from "next/font/local";
import "../../app/globals.css";
import Footer from "../../components/Footer";
import { NextIntlClientProvider } from "next-intl";
import { getMessages, setRequestLocale } from "next-intl/server";
import { routing } from "@/i18n/routing";
import { notFound } from "next/navigation";
import { NavigationMenuDemo } from "@/components/NavigationMenuDemo";
import QueryProvider from "../providers/QueryProvider";

const GraphikArabicThin = localFont({
  src: "../../../public/font/GraphikArabic-Thin.ttf",
  variable: "--font-thin",
});

const GraphikArabicExtralight = localFont({
  src: "../../../public/font/GraphikArabic-Extralight.ttf",
  variable: "--font-extralight",
});

const GraphikArabicLight = localFont({
  src: "../../../public/font/GraphikArabic-Light.ttf",
  variable: "--font-light",
});

const GraphikArabicRegular = localFont({
  src: "../../../public/font/GraphikArabic-Regular.ttf",
  variable: "--font-regular",
});

const GraphikArabicMedium = localFont({
  src: "../../../public/font/GraphikArabic-Medium.ttf",
  variable: "--font-medium",
});

const GraphikArabicSemibold = localFont({
  src: "../../../public/font/GraphikArabic-Semibold.ttf",
  variable: "--font-semibold",
});

const GraphikArabicBold = localFont({
  src: "../../../public/font/GraphikArabic-Bold.ttf",
  variable: "--font-bold",
});

const GraphikArabicBlack = localFont({
  src: "../../../public/font/GraphikArabic-Black.ttf",
  variable: "--font-black",
});

const GraphikArabicSuper = localFont({
  src: "../../../public/font/GraphikArabic-Super.ttf",
  variable: "--font-super",
});
export const metadata: Metadata = {
  title: "mudeer",
  description: "Generated by create next app",
};

export async function generateStaticParams() {
  return routing.locales.map((locale) => ({ locale }));
}

export default async function LocaleLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: { locale?: any };
}) {
  if (!params?.locale || !routing.locales.includes(params.locale)) {
    notFound();
  }

  // Await necessary async operations
  await setRequestLocale(params.locale);
  const messages = await getMessages();

  return (
    <html dir="ltr" lang={params.locale}>
      <NextIntlClientProvider messages={messages}>
        <body
          className={` 
          ${GraphikArabicThin.variable}
          ${GraphikArabicExtralight.variable}
          ${GraphikArabicLight.variable}
          ${GraphikArabicRegular.variable}
          ${GraphikArabicMedium.variable}
          ${GraphikArabicSemibold.variable}
          ${GraphikArabicBold.variable}
          ${GraphikArabicBlack.variable}
          ${GraphikArabicSuper.variable}
          bg-white`}
        >
          {/* <Navbar /> */}
          <QueryProvider>
            <NavigationMenuDemo />
            {children}
            <Footer />
          </QueryProvider>
        </body>
      </NextIntlClientProvider>
    </html>
  );
}
